"use strict";(self.webpackChunkclematis_doc=self.webpackChunkclematis_doc||[]).push([[4788],{71840:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"web-applications/serving-data/data-access-objects","title":"Data Access Objects","description":"The Data Access Objects","source":"@site/docs/web-applications/serving-data/data-access-objects.md","sourceDirName":"web-applications/serving-data","slug":"/web-applications/serving-data/data-access-objects","permalink":"/clematis.doc/docs/web-applications/serving-data/data-access-objects","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"dao","permalink":"/clematis.doc/docs/tags/dao"},{"inline":true,"label":"jpa","permalink":"/clematis.doc/docs/tags/jpa"},{"inline":true,"label":"persistence-manager","permalink":"/clematis.doc/docs/tags/persistence-manager"}],"version":"current","lastUpdatedAt":1742299689000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"tags":["dao","jpa","persistence-manager"]},"sidebar":"tutorialSidebar","previous":{"title":"Data Transfer Objects","permalink":"/clematis.doc/docs/web-applications/serving-data/data-transfer-objects"},"next":{"title":"Runtime Management","permalink":"/clematis.doc/docs/web-applications/logging/"}}');var s=a(74848),i=a(28453);const o={sidebar_position:4,tags:["dao","jpa","persistence-manager"]},r="Data Access Objects",c={},l=[{value:"JPA Configuration",id:"jpa-configuration",level:2},{value:"Repository Resources",id:"repository-resources",level:2},{value:"Data REST Configuration",id:"data-rest-configuration",level:2},{value:"Database Connections Pool",id:"database-connections-pool",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"data-access-objects",children:"Data Access Objects"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Data_Access_Object",children:"Data Access Objects"}),"\nis the pattern to provide access to the underlying persistent storage. Spring Data JPA\n(built on Hibernate) is responsible for this layer."]}),"\n",(0,s.jsx)(n.h2,{id:"jpa-configuration",children:"JPA Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Spring Data JPA can be tuned up in regard to JPA and\nHibernate specific ",(0,s.jsx)(n.a,{href:"https://docs.spring.io/spring-boot/appendix/application-properties/index.html#appendix.application-properties.data",children:"settings"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"Link to documentation",type:"info",children:(0,s.jsxs)(n.p,{children:["Spring Data JPA ",(0,s.jsx)(n.a,{href:"https://docs.spring.io/spring-data/jpa/reference/jpa.html",children:"documentation"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"repository-resources",children:"Repository Resources"}),"\n",(0,s.jsxs)(n.p,{children:["All repositories are kept in the packages like ",(0,s.jsx)(n.code,{children:"org.clematis.*.repository"})," and are\nannotated classes themselves:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="src/main/java/org/clematis/cosmic/repository/ProjectRepository.java"',children:'@RepositoryRestResource(path = "projects")\npublic interface ProjectRepository extends JpaRepository<Project, UUID> {\n   // ...\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Each repository needs a domain entity object, in the example above, it is ",(0,s.jsx)(n.code,{children:"Project"})," class:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="src/main/java/org/clematis/cosmic/model/Project.java"',children:'@Table(name = "projects")\n@Relation(collectionRelation = "data")\n@Entity\n@Data\n@ToString(exclude = {"runs"})\n@EqualsAndHashCode(callSuper = true)\npublic class Project extends IdEntity {\n\n    private String name;\n    private String description;\n\n    @OneToMany(fetch = FetchType.EAGER, cascade = {\n        CascadeType.MERGE, CascadeType.REFRESH, CascadeType.DETACH, CascadeType.REMOVE\n    })\n    @JoinTable(\n        name = "project_runs",\n        joinColumns = @JoinColumn(\n            name = "project_id",\n            referencedColumnName = "id"\n        ),\n        inverseJoinColumns = @JoinColumn(\n            name = "input_id",\n            referencedColumnName = "id"\n        )\n    )\n    @OrderBy("date ASC")\n    private final List<InputData> runs = new ArrayList<>();\n\n    public void add(InputData sampleData) {\n        if (sampleData != null) {\n            getRuns().add(sampleData);\n            sampleData.setProject(this);\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{title:"Anemic domain model",type:"tip",children:(0,s.jsxs)(n.p,{children:["An entity class with JPA annotations only is an ",(0,s.jsx)(n.a,{href:"https://martinfowler.com/bliki/AnemicDomainModel.html",children:"antipattern"}),".\nClematis domain classes often have some business logic in the classes."]})}),"\n",(0,s.jsx)(n.h2,{id:"data-rest-configuration",children:"Data REST Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The core functionality of Spring Data REST is to export the ",(0,s.jsx)(n.a,{href:"https://docs.spring.io/spring-data/rest/reference/repository-resources.html",children:"repositories"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"Shortcut",type:"info",children:(0,s.jsxs)(n.p,{children:["Spring Data REST is designed to ",(0,s.jsx)(n.a,{href:"https://docs.spring.io/spring-data/rest/reference/representations.html",children:"automatically create"}),"\nDTOs for the Web."]})}),"\n",(0,s.jsx)(n.p,{children:"A simple configuration is done in a Spring main configuration file, for example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="src/main/resources/application.yml"',children:"spring:\n  data:\n    rest:\n      basePath: /api\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"More customization",type:"info",children:(0,s.jsxs)(n.p,{children:["There are several tips on how to customize repository exposure and supported HTTP methods\nin the ",(0,s.jsx)(n.a,{href:"https://docs.spring.io/spring-data/rest/reference/customizing-sdr.html",children:"documentation"}),"."]})}),"\n",(0,s.jsxs)(n.admonition,{title:"Can be done differently",type:"tip",children:[(0,s.jsx)(n.p,{children:"As discussed before, another approach is to keep Data Access Objects only with data related annotations,\nwithout any business logic and to have a separate package with POJO classes following\nDomain Driven Design."}),(0,s.jsx)(n.p,{children:"This, however, would mean adding\nSpring Web controllers capabilities to project to process business use cases.\nIn Clematis applications, the mixed approach is used."})]}),"\n",(0,s.jsx)(n.h2,{id:"database-connections-pool",children:"Database Connections Pool"}),"\n",(0,s.jsxs)(n.p,{children:["Spring bundles ",(0,s.jsx)(n.a,{href:"https://github.com/brettwooldridge/HikariCP",children:"Hikari"})," an implementation\nof a database connections pool. The pool doesn't require any configuration,\nbut probably for some pool sizes:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="src/main/resources/application.yml"',children:"spring:\n  datasource:\n    initialization-mode: always\n\n    hikari:\n      maximum-pool-size: 25\n      minimum-idle: 1\n\n    username: SA\n    password: password\n    url: jdbc:h2:./data/dev\n    driver-class-name: org.h2.Driver\n"})}),"\n",(0,s.jsx)(n.p,{children:"Datasource is sending requests to the database instances so it needs to know the\naddresses. Usually they are taken from the environment profiles."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>r});var t=a(96540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);