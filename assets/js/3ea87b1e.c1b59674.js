"use strict";(self.webpackChunkclematis_doc=self.webpackChunkclematis_doc||[]).push([[4805],{412:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"web-applications/testing/pomodoro","title":"Pomodoro And Jest","description":"Pomodoro doesn\'t use Enzyme, since","source":"@site/docs/web-applications/testing/pomodoro.md","sourceDirName":"web-applications/testing","slug":"/web-applications/testing/pomodoro","permalink":"/clematis.doc/docs/web-applications/testing/pomodoro","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"jest","permalink":"/clematis.doc/docs/tags/jest"},{"inline":true,"label":"testing-library","permalink":"/clematis.doc/docs/tags/testing-library"},{"inline":true,"label":"coverage","permalink":"/clematis.doc/docs/tags/coverage"},{"inline":true,"label":"cobertura","permalink":"/clematis.doc/docs/tags/cobertura"}],"version":"current","lastUpdatedAt":1742201711000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"tags":["jest","testing-library","coverage","cobertura"]},"sidebar":"tutorialSidebar","previous":{"title":"Money Tracker Testing","permalink":"/clematis.doc/docs/web-applications/testing/money-tracker"},"next":{"title":"Cosmic And Vitest","permalink":"/clematis.doc/docs/web-applications/testing/cosmic"}}');var r=n(74848),o=n(28453);const i={sidebar_position:3,tags:["jest","testing-library","coverage","cobertura"]},a="Pomodoro And Jest",c={},d=[{value:"Installation",id:"installation",level:2},{value:"A Shallow Test",id:"a-shallow-test",level:2},{value:"Testing Styles",id:"testing-styles",level:2},{value:"Dynamic Text Correctness",id:"dynamic-text-correctness",level:2},{value:"User Interaction With A Form",id:"user-interaction-with-a-form",level:2},{value:"Testing With Redux Store",id:"testing-with-redux-store",level:2},{value:"Coverage",id:"coverage",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"pomodoro-and-jest",children:"Pomodoro And Jest"})}),"\n",(0,r.jsxs)(t.p,{children:["Pomodoro doesn't use ",(0,r.jsx)(t.a,{href:"https://enzymejs.github.io/enzyme/",children:"Enzyme"}),", since\nthe Enzyme library is ",(0,r.jsx)(t.a,{href:"https://dev.to/wojtekmaj/enzyme-is-dead-now-what-ekl",children:"discontinued"}),";\nthe official replacement for it is\n",(0,r.jsx)(t.a,{href:"https://testing-library.com/docs/react-testing-library/intro/",children:"React Testing Library"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.p,{children:"There are a few dependencies that have to be installed for\nJest and React Testing Library:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "devDependencies": {\n    "@testing-library/dom": "^8.20.1",\n    "@testing-library/jest-dom": "^6.6.3",\n    "@testing-library/react": "^12.1.5",\n    "@testing-library/react-hooks": "^8.0.1",\n    "@types/jest": "^29.5.11",\n    "@types/redux-mock-store": "^1.0.4",\n    "jest": "^29.7.0",\n    "jest-environment-jsdom": "^29.7.0"\n  }\n}\n\n'})}),"\n",(0,r.jsx)(t.p,{children:"Since Pomodoro is Webpack-based, it is required to\nhave paths resolving added to its configuration:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",metastring:'title="cfg/webpack.(server|client).config.js"',children:"module.exports = {\n  resolve: {\n    extensions: ['.js', '.jsx', '.ts', '.tsx', '.json'],\n    alias: {\n      'react-dom': IS_DEV\n      ?\n      '@hot-loader/react-dom': 'react-dom',\n      '@/*': path.resolve(__dirname,\n      '../src/*'\n      )\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"Also, the same for Jest configuration, along with some\nmocks for files:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",metastring:'title="jest.config.js"',children:"{ \n  moduleNameMapper: {\n    '\\\\.(css|less|sass|scss)$': 'identity-obj-proxy',\n    '\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$':\n      '<rootDir>/src/scripts/fileMock.js',\n    '^@/(.*)$': ['<rootDir>/src/$1']\n  }\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"a-shallow-test",children:"A Shallow Test"}),"\n",(0,r.jsx)(t.p,{children:"Pomodoro uses Redux to store much of the application data; however, there are a number of plain components using\nproperties. Tests are just checking these components can be rendered. The same can be checked for more complex\ncomponents:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'jsx title="src/shared/Statistics/FocusTotals/FocusTotals.test.tsx"',children:"import React from 'react';\nimport { render } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport { FocusTotals } from './FocusTotals';\n\nimport styles from './focustotals.css';\n\ndescribe('FocusTotals', () => {\n    it('renders without crashing', () => {\n        const {container} = render(<FocusTotals />);\n        expect(container).toBeInTheDocument();\n    });\n})\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The key function is ",(0,r.jsx)(t.code,{children:"render"})," which writes the component being tested to virtual\nDOM returning the object which can be used in the tests."]}),"\n",(0,r.jsx)(t.h2,{id:"testing-styles",children:"Testing Styles"}),"\n",(0,r.jsx)(t.p,{children:"Components are being decorated differently, depending on their data, and this can be validated in tests,\nfor example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'jsx title="src/shared/Statistics/FocusTotals/FocusTotals.test.tsx"',children:"\nit('applies active class when percent is greater than 0', () => {\n    const { container } = render(<FocusTotals percent={50} />);\n    expect(container.firstChild).toHaveClass(styles.active);\n});\n\nit('does not apply active class when percent is 0 or less', () => {\n    const { container } = render(<FocusTotals percent={0} />);\n    expect(container.firstChild).not.toHaveClass(styles.active);\n});\n\n"})}),"\n",(0,r.jsx)(t.h2,{id:"dynamic-text-correctness",children:"Dynamic Text Correctness"}),"\n",(0,r.jsx)(t.p,{children:"For text which is only visible on runtime, it is useful to create a simple test to check some cases:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'jsx title="src/shared/Statistics/DayTotals/DayTotals.test.tsx"',children:'const mockDay: IDayStats = {\n    name: "Monday",\n    date: new Date("2023-10-10"),\n    time: 120,\n    pause: 10,\n    break: 5,\n    stops: 2,\n    short: \'1\',\n};\n  \nit("should render the day name and date correctly", () => {\n    const { getByText } = render(<DayTotals day={mockDay} time="120" />);\n    expect(getByText("Monday (10/10/2023)")).toBeInTheDocument();\n});\n'})}),"\n",(0,r.jsx)(t.h2,{id:"user-interaction-with-a-form",children:"User Interaction With A Form"}),"\n",(0,r.jsxs)(t.p,{children:["Pomodoro uses ",(0,r.jsx)(t.code,{children:"@testing-library/react"})," to fire user clicks and do some\ntyping in the input fields of components being tested:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'jsx title="src/shared/Main/AddTaskForm/AddTaskForm.test.tsx"',children:"import { render, screen, fireEvent } from '@testing-library/react';\n\ntest('shows error message if task name is less than 3 characters', () => {\n    render(<AddTaskForm onSubmit={jest.fn()} />);\n    const input = screen.getByPlaceholderText('\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438');\n    const button = screen.getByText('\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c');\n\n    fireEvent.change(input, { target: { value: 'ab' } });\n    fireEvent.click(button);\n\n    expect(screen.getByText('\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435 \u0442\u0440\u0435\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438')).toBeInTheDocument();\n});\n"})}),"\n",(0,r.jsx)(t.p,{children:"In the case, the above Jest assumes 'ab' should trigger an error message and validates the form for the\npresence of the message."}),"\n",(0,r.jsx)(t.h2,{id:"testing-with-redux-store",children:"Testing With Redux Store"}),"\n",(0,r.jsxs)(t.p,{children:["Some components are using data from Redux store. To test the components\nalong with this data, a new ",(0,r.jsx)(t.a,{href:"https://github.com/reduxjs/redux-mock-store",children:"Redux Mock store"}),"\ncan be created:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'jsx title="src/shared/Statistics/WeekChart/WeekChart.test.tsx"',children:"\nimport configureStore from 'redux-mock-store';\n\nconst mockStore = configureStore([]);\n\ndescribe('WeekChart', () => {\n    let store: ReturnType<typeof mockStore>;\n    let initialState: RootState;\n\n\n})\n"})}),"\n",(0,r.jsx)(t.admonition,{title:"Deprecation Notice",type:"warning",children:(0,r.jsxs)(t.p,{children:["Pomodoro project is yet to be upgraded to use the\nrecommended Redux Toolkit. So this approach is\n",(0,r.jsx)(t.a,{href:"https://github.com/reduxjs/redux-mock-store?tab=readme-ov-file#deprecation-notice",children:"deprecated"})," and will be rewritten."]})}),"\n",(0,r.jsx)(t.p,{children:"Despite the deprecation of the mock store, the main idea\nwill work with a real store in RTK tests too."}),"\n",(0,r.jsx)(t.p,{children:"First, initial data for tests is created. Note that the\ndata should be for the previous week related to tests' date:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:'jsx title="src/shared/Statistics/WeekChart/WeekChart.test.tsx"',children:"beforeEach(() => {\n    const monday = getPreviousMonday(new Date());\n    initialState = {\n        day: {\n            date: new Date('2023-10-01'),\n            short: 'Sun',\n            time: 0,\n            pause: 0,\n            break: 0,\n            stops: 0,\n            name: '',\n        } as IDayStats,\n        week: {\n            start: monday,\n            end: getAnotherDay(monday, 7),\n            id: '1',\n            text: '',\n        } as IWeek,\n        stats: [\n            {\n                date: getAnotherDay(monday, -1),\n                short: 'Sun',\n                time: 120,\n                pause: 0,\n                break: 0,\n                stops: 0,\n                name: '\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435',\n            },\n            {\n                date: monday,\n                short: '\u041f\u043d',\n                time: 150,\n                pause: 0,\n                break: 0,\n                stops: 0,\n                name: '\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a',\n            }\n            //...\n        ]\n    }\n})\n"})}),"\n",(0,r.jsx)(t.p,{children:"So the next test is to verify the bar chart in the component\nis rendered with correct vertical line tick labels:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:"jsx",children:"  it('renders horizontal lines with correct times', () => {\n    render(\n      <Provider store={store}>\n        <WeekChart />\n      </Provider>,\n    );\n\n    expect(screen.getByText('42 \u0441\u0435\u043a')).toBeInTheDocument();\n    expect(screen.getByText('1 \u043c\u0438\u043d 24 \u0441\u0435\u043a')).toBeInTheDocument();\n    expect(screen.getByText('2 \u043c\u0438\u043d 6 \u0441\u0435\u043a')).toBeInTheDocument();\n    expect(screen.getByText('2 \u043c\u0438\u043d 48 \u0441\u0435\u043a')).toBeInTheDocument();\n  });\n"})}),"\n",(0,r.jsx)(t.p,{children:"Another test is to make sure that if a user clicks on a\nday, the date of the day becomes active:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",metastring:"jsx",children:"  it('dispatches setCurrentDay action when a day is clicked', () => {\n    render(\n      <Provider store={store}>\n        <WeekChart />\n      </Provider>,\n    );\n\n    fireEvent.click(screen.getByText('\u041f\u043d'));\n\n    const actions = store.getActions();\n    expect(actions).toEqual([setCurrentDay(initialState.stats[1])]);\n  });\n"})}),"\n",(0,r.jsxs)(t.p,{children:["In this snippet, mock store validates a synchronous\naction and the payload of the expected action. More\ndetails on the method is ",(0,r.jsx)(t.a,{href:"https://github.com/reduxjs/redux-mock-store?tab=readme-ov-file#synchronous-actions",children:"here"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"coverage",children:"Coverage"}),"\n",(0,r.jsxs)(t.p,{children:["Jest is configured to run with ",(0,r.jsx)(t.code,{children:"cobertura"})," coverage:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="jest.config.js"',children:"/** @type {import('ts-jest').JestConfigWithTsJest} */\n// eslint-disable-next-line\nmodule.exports = {\n//...\n  collectCoverage: true,\n  collectCoverageFrom: ['./src/**'],\n  coverageReporters: ['text', 'cobertura'],\n  coveragePathIgnorePatterns: [\n    'index.js',\n    'index.jsx',\n    'index.ts',\n    '/node_modules/',\n  ],\n};\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(96540);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);