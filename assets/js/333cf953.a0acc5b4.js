"use strict";(self.webpackChunkclematis_doc=self.webpackChunkclematis_doc||[]).push([[7880],{49707:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"web-applications-security/keycloak-https","title":"Switch to HTTPS","description":"It is better to have Keycloak HTTPS installed even in the internal network for various reasons,","source":"@site/docs/web-applications-security/keycloak-https.md","sourceDirName":"web-applications-security","slug":"/web-applications-security/keycloak-https","permalink":"/clematis.doc/docs/web-applications-security/keycloak-https","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"mkcert","permalink":"/clematis.doc/docs/tags/mkcert"},{"inline":true,"label":"keycloak","permalink":"/clematis.doc/docs/tags/keycloak"},{"inline":true,"label":"nginx","permalink":"/clematis.doc/docs/tags/nginx"}],"version":"current","lastUpdatedAt":1751297836000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"tags":["mkcert","keycloak","nginx"]},"sidebar":"tutorialSidebar","previous":{"title":"Motivation to Upgrade","permalink":"/clematis.doc/docs/web-applications-security/decommission"},"next":{"title":"Frontend Migration","permalink":"/clematis.doc/docs/web-applications-security/angular-migration"}}');var o=i(74848),r=i(28453);const s={sidebar_position:2,tags:["mkcert","keycloak","nginx"]},a="Switch to HTTPS",c={},l=[{value:"Install Nginx In The Keycloak LXC",id:"install-nginx-in-the-keycloak-lxc",level:2},{value:"Generate Certificates",id:"generate-certificates",level:2},{value:"Configuring Nginx",id:"configuring-nginx",level:2},{value:"Configuring Keycloak",id:"configuring-keycloak",level:2},{value:"How To Trust A Certificate",id:"how-to-trust-a-certificate",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"switch-to-https",children:"Switch to HTTPS"})}),"\n",(0,o.jsx)(n.p,{children:"It is better to have Keycloak HTTPS installed even in the internal network for various reasons,\nmostly for better understanding production challenges in the open environments. Also, even for PoC,\nit would mean it is ready to be deployed in the cloud."}),"\n",(0,o.jsx)(n.p,{children:"Keycloak has secure mode built-in, so it is possible to switch to it; or it is possible to\ninstall a proxy and let Keycloak know it is behind a proxy. The latter is more flexible in\nmaintenance."}),"\n",(0,o.jsx)(n.h2,{id:"install-nginx-in-the-keycloak-lxc",children:"Install Nginx In The Keycloak LXC"}),"\n",(0,o.jsx)(n.p,{children:"Given Keycloak LXC is running in the Proxmox environment, it is easy to install nginx from\nDebian repositories:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo apt install nginx\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Nginx will be working with certificates, and here we also have a choice: either a\nself-signed certificate generated with OpenSSL or a certificate with\nlocally trusted certificate authorities. For the latter, which is preferred,\n",(0,o.jsx)(n.a,{href:"https://github.com/FiloSottile/mkcert",children:"mkcert"})," tool is used."]}),"\n",(0,o.jsx)(n.h2,{id:"generate-certificates",children:"Generate Certificates"}),"\n",(0,o.jsxs)(n.p,{children:["Install ",(0,o.jsx)(n.code,{children:"mkcert"})," tool via Debian package manager on the same VM with Proxmox and Nginx:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo apt install mkcert\n"})}),"\n",(0,o.jsx)(n.p,{children:"Run the following commands to install a local certificate authority and to generate\nthe certificate for Nginx (note, it is required to provide IP-address of the server):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mkcert -install\nmkcert 192.168.1.157 keycloak.clematis\n"})}),"\n",(0,o.jsx)(n.p,{children:"It will create two files with default names in the current directory, which should be copied\nto standard directories after that:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo cp 192.168.1.157+1.pem /etc/ssl/certs/\nsudo cp 192.168.1.157+1-key.pem /etc/ssl/private/\n"})}),"\n",(0,o.jsx)(n.h2,{id:"configuring-nginx",children:"Configuring Nginx"}),"\n",(0,o.jsx)(n.p,{children:"Now it is time for Nginx configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/nginx/sites-available/default\n"})}),"\n",(0,o.jsx)(n.p,{children:"The valid and complete configuration is below:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-nginx",metastring:"configuration",children:"server {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    #\n    # SSL configuration\n    #\n    listen 443 ssl default_server;\n    listen [::]:443 ssl default_server;\n\n    ssl_certificate /etc/ssl/certs/192.168.1.157+1.pem;\n    ssl_certificate_key /etc/ssl/private/192.168.1.157+1-key.pem;\n\n    location / {\n            proxy_pass http://192.168.1.157:8080;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Nginx is using HTTP headers to communicate with Keycloak, and the next step is to\ntune Keycloak up to understand these headers."}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"A few words about CORS configuration. It should not be done in nginx, Keycloak handles it\ninternally, and it is configured for every client separately. Nginx CORS will conflict with\none from Keycloak."})}),"\n",(0,o.jsx)(n.h2,{id:"configuring-keycloak",children:"Configuring Keycloak"}),"\n",(0,o.jsxs)(n.p,{children:["There is a good piece of ",(0,o.jsx)(n.a,{href:"https://www.keycloak.org/server/configuration",children:"documentation on Keycloak configuration"}),",\nI was following it to make this step."]}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"Keycloak loads the configuration from four sources, which are listed here in order of application."}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Command-line parameters"}),"\n",(0,o.jsx)(n.li,{children:"Environment variables"}),"\n",(0,o.jsx)(n.li,{children:"Options defined in the conf/keycloak.conf file or in a user-created configuration file."}),"\n",(0,o.jsx)(n.li,{children:"Sensitive options defined in a user-created Java KeyStore file."}),"\n"]})]}),"\n",(0,o.jsxs)(n.p,{children:["For the LXC container it is easier to find the ",(0,o.jsx)(n.code,{children:"conf/keycloak.conf"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo nano /opt/keycloak/conf/keycloak.conf\n"})}),"\n",(0,o.jsx)(n.p,{children:"Add the following line to it:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"proxy-headers=xforwarded\n"})}),"\n",(0,o.jsx)(n.p,{children:"Restart Keycloak service:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo service keycloak restart\n"})}),"\n",(0,o.jsx)(n.p,{children:"Keycloak re-compiles some parts of itself during startup, however unusual it may seem, so after\nit is restarted, there will be a set of proxy-related lines in the configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd /opt/keycloak/bin\n./kc.sh show-config\n\nCurrent Mode: development\nCurrent Configuration:\n # some lines are omitted for brevity\n        kc.proxy-forwarded-host =  xforwarded (keycloak.conf)\n        kc.proxy-allow-forwarded-header =  xforwarded (keycloak.conf)\n        kc.proxy-trusted-header-enabled =  xforwarded (keycloak.conf)\n        kc.proxy-headers =  xforwarded (keycloak.conf)\n        kc.proxy-allow-x-forwarded-header =  xforwarded (keycloak.conf)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"how-to-trust-a-certificate",children:"How To Trust A Certificate"}),"\n",(0,o.jsx)(n.p,{children:"The goal is to have the Keycloak Web UI loaded with a valid certificate in your browser:"}),"\n",(0,o.jsx)("img",{src:i(77038).A,width:"730px"}),"\n",(0,o.jsx)(n.p,{children:"The procedure is different for various operating systems, for macOS it is as follows:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Safari uses the Keychain Access utility built into macOS to manage digital certificates. It may\nnot work as expected, there are several issues with adding certificates to the list of trusted ones."}),"\n",(0,o.jsxs)(n.li,{children:["It is better to use Chrome to open the certificate and export it from the browser, saving it\nto the local drive. ",(0,o.jsx)(n.a,{href:"https://www.google.com/search?q=use+Chrome+to+open+the+certificate+and+export+it+from+the+browser%2C+saving+it+to+the+local+drive.&oq=use+Chrome+to+open+the+certificate+and+export+it+from+the+browser%2C+saving+it+to+the+local+drive.&gs_lcrp=EgZjaHJvbWUqBggAEEUYOzIGCAAQRRg70gEHNTY2ajBqN6gCALACAA&sourceid=chrome&ie=UTF-8",children:"More info"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"The certificate file then can be opened with the Keychain Access utility and selecting 'Always Trust' option."}),"\n"]}),"\n",(0,o.jsx)("img",{src:i(35970).A,width:"630px"}),"\n",(0,o.jsx)(n.p,{children:"The good thing about locally trusted certificate authorities is that the browsers and\nother client components which are keen on security procedures make no difference between\ncertificates issued locally and production certificates from the official authorities. That\nis why self-signed certificates are less convenient."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},35970:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/trusting_certificate-16bcb757686060574b6de79fd9746769.png"},77038:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/valid_keycloak_certificate-b0a2a673f198b14af491910221886457.png"},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(96540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);