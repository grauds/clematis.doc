"use strict";(self.webpackChunkclematis_doc=self.webpackChunkclematis_doc||[]).push([[4467],{68617:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"recipe-book/java/prefix_sum","title":"Prefix Sum","description":"Definition","source":"@site/docs/recipe-book/java/prefix_sum.md","sourceDirName":"recipe-book/java","slug":"/recipe-book/java/prefix_sum","permalink":"/clematis.doc/docs/recipe-book/java/prefix_sum","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"prefix sum","permalink":"/clematis.doc/docs/tags/prefix-sum"},{"inline":true,"label":"algorithms","permalink":"/clematis.doc/docs/tags/algorithms"},{"inline":true,"label":"difference array","permalink":"/clematis.doc/docs/tags/difference-array"}],"version":"current","lastUpdatedAt":1753985498000,"frontMatter":{"tags":["prefix sum","algorithms","difference array"]},"sidebar":"tutorialSidebar","previous":{"title":"Math Operations","permalink":"/clematis.doc/docs/recipe-book/java/maths"},"next":{"title":"Streaming API","permalink":"/clematis.doc/docs/recipe-book/java/streaming"}}');var t=i(74848),s=i(28453);const o={tags:["prefix sum","algorithms","difference array"]},a="Prefix Sum",l={},c=[{value:"Definition",id:"definition",level:2},{value:"Effective Modification of Counters&#39; Interval",id:"effective-modification-of-counters-interval",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"prefix-sum",children:"Prefix Sum"})}),"\n",(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(n.admonition,{title:"The source of confusion",type:"info",children:[(0,t.jsxs)(n.p,{children:["Given ",(0,t.jsx)(n.code,{children:"int[] sum;"})," is a prefix sum for an array, the sum between ",(0,t.jsx)(n.code,{children:"l"}),"\nand ",(0,t.jsx)(n.code,{children:"r"})," indexes of the array would be ",(0,t.jsx)(n.code,{children:"sum[r] - sum[l]"}),"."]}),(0,t.jsx)(n.p,{children:"Example:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"n = [1 2 3 4 2 5] -> prefix sum [0 1 3 6 10 12 17]"}),"\n",(0,t.jsx)(n.li,{children:"l = 1 and r = 4 -> sum[l] = 1, sum[r] = 10"}),"\n",(0,t.jsx)(n.li,{children:"sum[r] - sum[l] = 9"}),"\n",(0,t.jsx)(n.li,{children:"Counting naively, the sum including r index is 12, the sum including l index is 3,"}),"\n",(0,t.jsx)(n.li,{children:"12 - 3 = 9."}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"effective-modification-of-counters-interval",children:"Effective Modification of Counters' Interval"}),"\n",(0,t.jsx)(n.p,{children:"The uniform modification of values in an array of counters:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"int[] a = new int[n]; // arrays of values to work with\nfor (int i = 0; i < q; i++) { \n    int l = queries[i][0] - 1; // the left border of the interval\n    int r = queries[i][1] - 1; // the right border of the interval\n    a[l]++; // the first index of the range is gaining 1\n    if (r + 1 < n) { // the last + 1 index of the range is losing 1\n        a[r + 1]--;\n    }\n}\n\n// compose the prefix sum\nfor (int i = 1; i < n; i++) {\n    a[i] += a[i - 1];\n}\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Given the array: [0, 0, 0, 0, 0, 0]"}),"\n",(0,t.jsx)(n.li,{children:"Need to add 1 to numbers from 2 to 4"}),"\n",(0,t.jsx)(n.li,{children:"Add 1 to l + 1: [0, 0, 1, 0, 0, 0]"}),"\n",(0,t.jsx)(n.li,{children:"Subtract 1 from the next index to r: [0, 0, 1, 0, 0, -1]"}),"\n",(0,t.jsx)(n.li,{children:"Need to add 1 to numbers from 1 to 3"}),"\n",(0,t.jsx)(n.li,{children:"Add 1 to l + 1: [0, 1, 1, 0, 0, -1]"}),"\n",(0,t.jsx)(n.li,{children:"Subtract 1 from the next index to r: [0, 1, 1, 0, -1, -1]"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Always the last step after all operations are done"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Compose the prefix sum [0, 1, 2, 2, 1, 0]"}),"\n"]})]})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(96540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);