"use strict";(self.webpackChunkclematis_doc=self.webpackChunkclematis_doc||[]).push([[8430],{15807:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"recipe-book/java/binary_search","title":"Binary Search","description":"Binary search includes both limits of an interval.","source":"@site/docs/recipe-book/java/binary_search.md","sourceDirName":"recipe-book/java","slug":"/recipe-book/java/binary_search","permalink":"/clematis.doc/docs/recipe-book/java/binary_search","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"search","permalink":"/clematis.doc/docs/tags/search"},{"inline":true,"label":"algorithms","permalink":"/clematis.doc/docs/tags/algorithms"}],"version":"current","lastUpdatedAt":1757833255000,"frontMatter":{"tags":["search","algorithms"]},"sidebar":"tutorialSidebar","previous":{"title":"Java"},"next":{"title":"Maps And Sets","permalink":"/clematis.doc/docs/recipe-book/java/map"}}');var s=r(74848),a=r(28453);const t={tags:["search","algorithms"]},c="Binary Search",l={},o=[{value:"Edge Cases",id:"edge-cases",level:2},{value:"Left Binary Search",id:"left-binary-search",level:2},{value:"Right Binary Search",id:"right-binary-search",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"binary-search",children:"Binary Search"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Binary search includes both limits of an interval."})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Binary search works with arrays of more than one element."})}),"\n",(0,s.jsx)(n.h2,{id:"edge-cases",children:"Edge Cases"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It is reasonable to check if the element we search for is less or equal than the first element of the array."}),"\n",(0,s.jsx)(n.li,{children:"It is also reasonable to check if the element we search for is greater or equal than the last element of the array."}),"\n",(0,s.jsxs)(n.li,{children:["The search returns ",(0,s.jsx)(n.code,{children:"0"})," index if the element is not found. In this case, an additional check is required: ",(0,s.jsx)(n.code,{children:"check(m, params)"}),".\nFor instance, in array ",(0,s.jsx)(n.code,{children:"[2, 4, 6, 8]"}),", if we search for elements ",(0,s.jsx)(n.code,{children:"< 2"}),", the pointers will end up at 0."]}),"\n",(0,s.jsx)(n.li,{children:"The same with the last element, the condition should be validated once again."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"left-binary-search",children:"Left Binary Search"}),"\n",(0,s.jsxs)(n.p,{children:["The first value which makes ",(0,s.jsx)(n.code,{children:"check"})," procedure return true."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:" \n   int[] a = new int[n];\n   //...\n   int l = 0;\n   int r = n - 1;\n   \n   while (l < r) {\n       int m = (l + r) / 2;\n       if (check(m, params)) {\n            r = m;                   \n       } else {\n            l = m + 1;\n       }\n   }\n   \n   return l;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Justification:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Array of two elements, pointers are set as displayed: { L, R }"}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"check"})," is OK => { Lm, R } => { LR, ... }"]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"check"})," is not OK => { Lm, R } => { ..., LR } => would've been an endless loop if L is not m + 1,\nin other words { L, R } again."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"right-binary-search",children:"Right Binary Search"}),"\n",(0,s.jsxs)(n.p,{children:["The last value which makes ",(0,s.jsx)(n.code,{children:"check"})," procedure return true or ",(0,s.jsx)(n.code,{children:"n - 1"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"\n   int[] a = new int[n];\n   //...\n   int l = 0;\n   int r = n - 1;\n   \n   while (l < r) {\n       int m = (l + r + 1) / 2; // rounding up\n       if (m >= n) {\n          break;\n       }\n       if (check(m, params)) {\n           l = m;\n       } else {\n           r = m - 1;        \n       }   \n   }\n \n   return l;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Justification:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Array of two elements, pointers are set as displayed: { L, R }"}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"check"})," is OK => { L, Rm } => { ..., LR }, m is rounding up."]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"check"})," is not OK => { L, Rm } => { LR, ... } => would've been an endless loop if L is not m - 1,\nin other words { L, R } again."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var i=r(96540);const s={},a=i.createContext(s);function t(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);