"use strict";(self.webpackChunkclematis_doc=self.webpackChunkclematis_doc||[]).push([[2934],{91754:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"web-applications/business-domain/business-domain","title":"Business Domain","description":"This paragraph is a part of the collection of requirements process,","source":"@site/docs/web-applications/business-domain/business-domain.md","sourceDirName":"web-applications/business-domain","slug":"/web-applications/business-domain/","permalink":"/clematis.doc/docs/web-applications/business-domain/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"web-controller","permalink":"/clematis.doc/docs/tags/web-controller"},{"inline":true,"label":"model-mapper","permalink":"/clematis.doc/docs/tags/model-mapper"},{"inline":true,"label":"collection-of-requirements","permalink":"/clematis.doc/docs/tags/collection-of-requirements"},{"inline":true,"label":"wireframes","permalink":"/clematis.doc/docs/tags/wireframes"},{"inline":true,"label":"cucumber","permalink":"/clematis.doc/docs/tags/cucumber"}],"version":"current","lastUpdatedAt":1742991676000,"sidebarPosition":13,"frontMatter":{"sidebar_position":13,"tags":["web-controller","model-mapper","collection-of-requirements","wireframes","cucumber"]},"sidebar":"tutorialSidebar","previous":{"title":"More Code Standards","permalink":"/clematis.doc/docs/web-applications/more-code-standards"},"next":{"title":"Database Initialization","permalink":"/clematis.doc/docs/web-applications/database-initialization"}}');var a=i(74848),o=i(28453);const t={sidebar_position:13,tags:["web-controller","model-mapper","collection-of-requirements","wireframes","cucumber"]},r="Business Domain",l={},c=[{value:"Money Tracker",id:"money-tracker",level:2},{value:"Native Queries",id:"native-queries",level:3},{value:"Stored Procedures",id:"stored-procedures",level:3},{value:"Solution Estimation",id:"solution-estimation",level:3},{value:"Cosmic",id:"cosmic",level:2},{value:"Solution Estimation",id:"solution-estimation-1",level:3},{value:"Clematis Weather",id:"clematis-weather",level:2},{value:"Solution Estimation",id:"solution-estimation-2",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"business-domain",children:"Business Domain"})}),"\n",(0,a.jsxs)(n.p,{children:["This paragraph is a part of the ",(0,a.jsx)("i",{children:"collection of requirements"})," process,\nwhich also includes ",(0,a.jsx)(n.a,{href:"/clematis.doc/docs/web-applications/wireframes/",children:"wireframes"})," and modeling\nwith UML."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"Worth mentioning that DDD implies the domain becomes familiar to\ndevelopers during discussion and modeling, so it may replace formal requirements with\na domain model and universal language for it."})}),"\n",(0,a.jsx)(n.p,{children:"According to Eric Evans' 'Domain-Driven Design' definition:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Domain Layer: This layer contains information about the domain. This\nis the heart of the business software. The state of\nbusiness objects is held here. Persistence of the\nbusiness objects and possibly their state is delegated to\nthe infrastructure layer."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The implementation of this layer is different in all the projects, since the requirements\nare different and the business domains are different by their nature."}),"\n",(0,a.jsx)(n.h2,{id:"money-tracker",children:"Money Tracker"}),"\n",(0,a.jsx)(n.p,{children:"The specific requirements of this project are the following:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Money Tracker business logic is done in the original desktop application,\nthe web application is only trying to extend the data analysis."}),"\n",(0,a.jsx)(n.li,{children:"Money Tracker web application is not changing any data in the database since\nthe desktop application is used for that and the database is regularly synchronized."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Therefore, the package ",(0,a.jsx)(n.code,{children:"org.clematis.mt.model"})," is bound to the database schema."]}),"\n",(0,a.jsx)(n.h3,{id:"native-queries",children:"Native Queries"}),"\n",(0,a.jsx)(n.p,{children:"The solution is to give the business domain to Spring Data and to use more complex queries\nto generate data for presentation in charts. Native JPA queries are used to\nselect all required data in one request to the underlying database. For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",metastring:'title="src/main/java/org/clematis/mt/repository/CommodityGroupRepository.java"',children:'@RepositoryRestResource(path = "commodityGroups")\npublic interface CommodityGroupRepository\n        extends PagingAndSortingAndFilteringByNameRepository<CommodityGroup, Integer> {\n    @Query(\n            value = """\n                SELECT * FROM (WITH RECURSIVE w1(id, parent, name) AS\n                (SELECT c.id, c.parent, c.name\n                    FROM COMMGROUP as c\n                    WHERE c.id = :id\n                UNION ALL\n                SELECT c2.id, c2.parent, c2.name\n                    FROM w1 JOIN COMMGROUP as c2 ON c2.id=w1.parent\n                )\n                SELECT * FROM w1 WHERE w1.id <> :id)""",\n            nativeQuery = true\n    )\n    @RestResource(path = "pathById")\n    List<CommodityGroup> findPathById(@Param("id") Integer id);\n'})}),"\n",(0,a.jsx)(n.p,{children:"This example uses a recursive query to get the path in the group of commodities."}),"\n",(0,a.jsx)(n.h3,{id:"stored-procedures",children:"Stored Procedures"}),"\n",(0,a.jsx)(n.p,{children:"Some calculations in queries are repeated many times and should be as quick as possible. For example,\nthis is a procedure to find cross-rate for two currencies on some date. If the pair is not the main\npair with exchange rate known in the database, the cross-rate calculation is used."}),"\n",(0,a.jsx)(n.h3,{id:"solution-estimation",children:"Solution Estimation"}),"\n",(0,a.jsx)(n.p,{children:"The business domain is driven by the legacy database schema, and some\nbusiness logic leaks to stored procedures and complex queries.\nBusiness domain classes are also DAO classes:"}),"\n",(0,a.jsx)(n.mermaid,{value:'block-beta\n    columns 4    \n   \n    db[("Legacy DB")]:3\n    space:3\n    block:DDD:2\n        columns 2\n        DAO Domain\n    end\n    DTO space DDD\n    db --\x3e DDD\n    DDD --\x3e db\n    DDD --\x3e DTO'}),"\n",(0,a.jsx)(n.p,{children:"Pros:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Complex native queries and stored procedures give a significant performance boost."}),"\n",(0,a.jsx)(n.li,{children:"The combination of Data Access Objects and business domain classes saved from some boilerplate code."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Cons:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Native queries are harder to write and debug."}),"\n",(0,a.jsx)(n.li,{children:"Stored procedures steal some business logic and hide it under wraps."}),"\n",(0,a.jsx)(n.li,{children:"Legacy database vendor lock-up."}),"\n",(0,a.jsx)(n.li,{children:"Fragile DDD, since any change of presentation requirements will lead to changes in the\nbusiness domain."}),"\n",(0,a.jsx)(n.li,{children:"The combination of Data Access Objects and business domain classes imposes limitations on."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"cosmic",children:"Cosmic"}),"\n",(0,a.jsx)(n.admonition,{title:"NDA",type:"info",children:(0,a.jsx)(n.p,{children:"Unfortunately, the source code and business domain for the project are under the Non-disclosure agreement, so it\nis only possible to describe the general principles of domain design."})}),"\n",(0,a.jsx)(n.p,{children:"The requirements for the project are quite commonly seen in other projects:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Users are working on projects."}),"\n",(0,a.jsx)(n.li,{children:"Each project has its own settings and data."}),"\n",(0,a.jsx)(n.li,{children:"Each project has a list of calculation results."}),"\n",(0,a.jsx)(n.li,{children:"Results can be downloaded in text format."}),"\n",(0,a.jsx)(n.li,{children:"Input/Output of Fortran module should be stored in the persistent storage."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"solution-estimation-1",children:"Solution Estimation"}),"\n",(0,a.jsxs)(n.p,{children:["The business domain drives the Database schema in this project. However, the complex business\nlogic is in the legacy code module and the application is using that module as a ",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Black_box",children:"black box"}),".\nDTO are required to communicate with that black box, and they reflect the data\nrequirements of scientific software."]}),"\n",(0,a.jsx)(n.mermaid,{value:'block-beta\n    columns 3    \n       \n    m("Legacy Code"):2\n    space:2\n    \n    db[("Web Database")]:3   \n    space:2\n    \n    legacy_dto("Legacy DTO") \n    space:2\n    \n    block:DDD:2\n        columns 2\n        DAO Domain\n    end\n    \n    dto("Web DTO")\n    \n    m --\x3e legacy_dto\n    legacy_dto --\x3e m\n    legacy_dto --\x3e DAO\n    \n    dto space DAO\n    db --\x3e DAO\n    DAO --\x3e db\n    DDD --\x3e dto'}),"\n",(0,a.jsx)(n.p,{children:"Pros:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"DDD principles are satisfied, the solution has a Presentation Layer and a Domain Layer."}),"\n",(0,a.jsx)(n.li,{children:"The combination of Data Access Objects and business domain classes saved from some boilerplate code."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Cons:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The combination of Data Access Objects and business domain classes imposes limitations on\nbusiness domain modification during software maintenance."}),"\n",(0,a.jsx)(n.li,{children:"Lock-up on relational databases."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"clematis-weather",children:"Clematis Weather"}),"\n",(0,a.jsx)(n.p,{children:"The requirements for the project are quite simple:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Import and periodically update the series of weather observations"}),"\n",(0,a.jsx)(n.li,{children:"Import and periodically update the photos of the same place in different weather conditions."}),"\n",(0,a.jsx)(n.li,{children:"Be able to select a proper photo for a given date even if there is no photo for that date, judging only\nby weather observations. A photo can be selected from the photos of the similar weather conditions."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Import and update are done by a Groovy script which uses manually downloaded\nCSV files from a weather station."}),"\n",(0,a.jsx)(n.h3,{id:"solution-estimation-2",children:"Solution Estimation"}),"\n",(0,a.jsx)(n.mermaid,{value:'block-beta\n    columns 3    \n       \n    m("Groovy Code"):2\n    space:2\n    \n    db[("Web Database")]:3   \n    space:2\n        \n    block:DDD:2\n        columns 2\n        DAO Domain\n    end\n    \n    dto("Web DTO")\n    \n    m --\x3e DAO\n    \n    dto space DAO\n    db --\x3e DAO\n    DAO --\x3e db\n    DDD --\x3e dto'}),"\n",(0,a.jsx)(n.p,{children:"Groovy importer works directly with DAO to store information in the database."}),"\n",(0,a.jsx)(n.p,{children:"Pros:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"DDD principles are satisfied, the solution has a Presentation Layer and a Domain Layer."}),"\n",(0,a.jsx)(n.li,{children:"The combination of Data Access Objects and business domain classes saved from some boilerplate code."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Cons:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Database schema and DAO are defined by the CVS format of observations. Different\nobservations standard from another weather station may not be compatible with this application."}),"\n",(0,a.jsx)(n.li,{children:"The combination of Data Access Objects and business domain classes imposes limitations on business domain modification during software maintenance."}),"\n",(0,a.jsx)(n.li,{children:"Lock-up on relational databases."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsxs)(n.p,{children:["It is advisable to have business logic separated from data access related classes, however, it\nis also possible to keep them together since ",(0,a.jsx)(n.a,{href:"https://docs.spring.io/spring-data/relational/reference/jdbc/domain-driven-design.html",children:"Spring Data allows that"}),".\nKeeping that in mind during discussion of requirements may help avoid creating boilerplate code."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>r});var s=i(96540);const a={},o=s.createContext(a);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);