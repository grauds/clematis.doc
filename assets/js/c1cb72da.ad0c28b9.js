"use strict";(self.webpackChunkclematis_doc=self.webpackChunkclematis_doc||[]).push([[2750],{91263:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"recipe-book/react/styles-as-props","title":"Pass Additional Styles As Props","description":"It is often required to change colours, borders and other elements in the descendant components if compared","source":"@site/docs/recipe-book/react/styles-as-props.md","sourceDirName":"recipe-book/react","slug":"/recipe-book/react/styles-as-props","permalink":"/clematis.doc/docs/recipe-book/react/styles-as-props","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"react","permalink":"/clematis.doc/docs/tags/react"},{"inline":true,"label":"styles","permalink":"/clematis.doc/docs/tags/styles"},{"inline":true,"label":"css","permalink":"/clematis.doc/docs/tags/css"},{"inline":true,"label":"sass","permalink":"/clematis.doc/docs/tags/sass"},{"inline":true,"label":"less","permalink":"/clematis.doc/docs/tags/less"}],"version":"current","lastUpdatedAt":1748339770000,"frontMatter":{"tags":["react","styles","css","sass","less"]},"sidebar":"tutorialSidebar","previous":{"title":"Update State From Props","permalink":"/clematis.doc/docs/recipe-book/react/props-and-state"},"next":{"title":"Testing"}}');var o=t(74848),a=t(28453);const r={tags:["react","styles","css","sass","less"]},c="Pass Additional Styles As Props",l={},i=[];function d(e){const s={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"pass-additional-styles-as-props",children:"Pass Additional Styles As Props"})}),"\n",(0,o.jsxs)(s.p,{children:["It is often required to change colours, borders and other elements in the descendant components if compared\nto the base version of the component used. It's a rather simple task with object spread syntax with ",(0,o.jsx)(s.code,{children:"CSSModuleClasses"})," type:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-typescript",metastring:"jsx",children:"import styles from './styles.module.css'\n\nexport interface IDialogButtonsProps {\n    moreStyles?: CSSModuleClasses\n    //...\n}\n\nexport function DialogButtons({\n    moreStyles\n    //...\n}: Readonly<IDialogButtonsProps>): React.JSX.Element {\n\n    const styled: CSSModuleClasses = {...styles, ...moreStyles}\n\n    return <>\n        <div className={styled.buttons}>\n        //...\n        </div>    \n    </>\n}    \n\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Thanks to ",(0,o.jsx)(s.a,{href:"/clematis.doc/docs/web-applications/styling#css-modules-1",children:"CSS modules support"})]})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>c});var n=t(96540);const o={},a=n.createContext(o);function r(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);