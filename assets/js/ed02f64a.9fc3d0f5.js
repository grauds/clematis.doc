"use strict";(self.webpackChunkclematis_doc=self.webpackChunkclematis_doc||[]).push([[5991],{58098:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"web-applications-security/angular-migration","title":"Frontend Migration","description":"Since Keycloak LXC is running with the latest version of Keycloak and will be maintained","source":"@site/docs/web-applications-security/angular-migration.md","sourceDirName":"web-applications-security","slug":"/web-applications-security/angular-migration","permalink":"/clematis.doc/docs/web-applications-security/angular-migration","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"angular","permalink":"/clematis.doc/docs/tags/angular"},{"inline":true,"label":"keycloak","permalink":"/clematis.doc/docs/tags/keycloak"},{"inline":true,"label":"nginx","permalink":"/clematis.doc/docs/tags/nginx"}],"version":"current","lastUpdatedAt":1751048335000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"tags":["angular","keycloak","nginx"]},"sidebar":"tutorialSidebar","previous":{"title":"Switch to HTTPS","permalink":"/clematis.doc/docs/web-applications-security/keycloak-https"},"next":{"title":"Frontend Switch to HTTPS","permalink":"/clematis.doc/docs/web-applications-security/angular-https"}}');var r=t(74848),a=t(28453);const i={sidebar_position:3,tags:["angular","keycloak","nginx"]},s="Frontend Migration",l={},c=[{value:"Migration of Angular Frontend to Angular v19 and Keycloak v19",id:"migration-of-angular-frontend-to-angular-v19-and-keycloak-v19",level:2},{value:"Migration to Angular v19",id:"migration-to-angular-v19",level:3},{value:"TypeScript changes",id:"typescript-changes",level:3},{value:"Migration to Keycloak v19",id:"migration-to-keycloak-v19",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"frontend-migration",children:"Frontend Migration"})}),"\n",(0,r.jsx)(n.p,{children:"Since Keycloak LXC is running with the latest version of Keycloak and will be maintained\nto run the latest version as much as possible, the keycloak client adapter for Angular in our case\nshould also be updated."}),"\n",(0,r.jsx)(n.h2,{id:"migration-of-angular-frontend-to-angular-v19-and-keycloak-v19",children:"Migration of Angular Frontend to Angular v19 and Keycloak v19"}),"\n",(0,r.jsx)(n.p,{children:"Angular and Keycloak adapter are tightly coupled together,\nand the Keycloak adapter version follows the version of Angular, for instance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "dependencies": {\n    "@angular/animations": "^19.2.13",\n    "@angular/cdk": "^19.2.13",\n    "@angular/common": "^19.2.13",\n    "@angular/compiler": "^19.2.13",\n    "@angular/core": "^19.2.13",\n    "@angular/forms": "^19.2.13",\n    "@angular/localize": "^19.2.13",\n    "@angular/material": "^19.2.13",\n    "@angular/material-moment-adapter": "^19.2.13",\n    "@angular/platform-browser": "^19.2.13",\n    "@angular/platform-browser-dynamic": "^19.2.13",\n    "@angular/router": "^19.2.13",\n    "keycloak-angular": "^19.0.2",\n    "keycloak-js": "^26.2.0"\n  },\n  "devDependencies": {\n    "@angular-devkit/build-angular": "^19.2.13",\n    "@angular-devkit/core": "^19.2.13",\n    "@angular-devkit/schematics": "^19.2.13",\n    "@angular/cli": "^19.2.13",\n    "@angular/compiler-cli": "^19.2.13",\n    "@angular/language-service": "^19.2.13",\n    "@types/keycloak-js": "^3.4.1"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"Before everything, please check the Node version used,\nsince Angular 19 supports Node.js versions 18.19.1, 20.11.1, and 22.0.0 (and newer).\nAlso, TypeScript version 5.6 or higher and RxJS version ^6.5.3 or ^7.5."})}),"\n",(0,r.jsx)(n.h3,{id:"migration-to-angular-v19",children:"Migration to Angular v19"}),"\n",(0,r.jsxs)(n.p,{children:["The process is described in detail in this manual ",(0,r.jsx)(n.a,{href:"https://angular.dev/update-guide?v=18.0-19.0&l=2",children:"migration of Angular to version 19"}),".\nIn addition to these steps, I had to do the following:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Environment configuration replaces ",(0,r.jsx)(n.code,{children:"browserTarget"})," with ",(0,r.jsx)(n.code,{children:"buildTarget"})," in project.json:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="projest.json"',children:'{\n    "serve": {\n      "executor": "@angular-devkit/build-angular:dev-server",\n      "configurations": {\n        "default": {\n          "buildTarget": "money-tracker-ui:build:default"\n        },\n        "demo": {\n          "buildTarget": "money-tracker-ui:build:demo"\n        }\n      },\n      "defaultConfiguration": "development"\n    }\n }\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["Removed the application bootstrapping from ",(0,r.jsx)(n.code,{children:"app.module.ts"})," file, it now only imports non-standalone components from\nthe application package and acts as a module:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'jsx title="apps/money-tracker-ui/src/app/app.module.ts"',children:"// imports for the application components and third-party components\n@NgModule({\n   declarations: [\n      // declarations for the application components\n   ],\n   imports: [\n      // third-party component dependencies for the module\n   ],\n   exports: [\n      HeaderComponent\n   ],\n   providers: []\n})\nexport class AppModule {\n   constructor(\n           hateoasConfig: NgxHateoasClientConfigurationService,\n           environmentService: EnvironmentService\n   ) {\n      hateoasConfig.configure({\n         http: {\n            defaultRoute: {\n               rootUrl: environmentService.getValue('apiUrl'),\n            },\n         },\n         useTypes: {\n            resources: [\n               AccountBalance,\n               Entity,\n               CommodityGroup,\n               Commodity,\n               MoneyExchange,\n               MoneyType,\n               MonthlyDelta,\n               OrganizationGroup,\n               Organization,\n               ExpenseItem,\n               UnitType,\n            ],\n         },\n      });\n   }\n}\n\nexport class AppComponentsModule {}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["The AppComponent is standalone and is bootstrapped in ",(0,r.jsx)(n.code,{children:"main.ts"})," file now:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'jsx title="apps/money-tracker-ui/src/main.ts"',children:"// imports requires for third-party providers and the main application component\nif (environment.production) {\n   enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n   providers: [\n      provideRouter(routes),\n      provideHttpClient(),\n      provideAnimations(),\n      importProvidersFrom(\n              // third-party providers\n              SharedComponentsModule,\n              AppComponentsModule // note, that the components specific for the application are the \n                      // same module as the shared components and other modules\n      ),\n      // to add Keycloak providers in the next step\n      provideRouter(routes),\n      {\n         provide: ENVIRONMENT,\n         useValue: environment,\n      },\n      provideHttpClient(withInterceptors([includeBearerTokenInterceptor]))\n   ],\n}).catch((err) => console.error(err));\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"As a result, the new configuration is more concise and logical than before."}),"\n",(0,r.jsx)(n.h3,{id:"typescript-changes",children:"TypeScript changes"}),"\n",(0,r.jsx)(n.p,{children:"Angular v19 requires some updates for TypeScript compiler settings:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="tsconfig.base.json"',children:'{\n  "compilerOptions": {\n    "target": "es2022",\n    "module": "es2022",\n    "strict": true\n  },\n  "angularCompilerOptions": {\n    "strictInjectionParameters": true,\n    "strictTemplates": true,\n    "compilationMode": "partial"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"migration-to-keycloak-v19",children:"Migration to Keycloak v19"}),"\n",(0,r.jsxs)(n.p,{children:["This version came out in December'24 and has some breaking changes as it's seen in the\n",(0,r.jsx)(n.a,{href:"https://github.com/mauriciovigolo/keycloak-angular/releases/tag/v19.0.0",children:"Release Notes"}),".\nLet's open the ",(0,r.jsx)(n.a,{href:"https://github.com/mauriciovigolo/keycloak-angular/blob/main/docs/migration-guides/v19.md",children:"Migration Guide"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Direct usage of the ",(0,r.jsx)(n.code,{children:"keycloak-js"})," client eliminates the need for a wrapper service. However,\nto be able to use imports from ",(0,r.jsx)(n.code,{children:"keycloak-js"}),", TypeScript module resolution has to be changed to allow such imports:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="tsconfig.base.json"',children:'{\n   "compilerOptions": {\n     "moduleResolution": "bundler",\n     "lib": ["es2021", "dom"]\n   }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Note that this change can potentially break the other libraries' imports, so do it with caution. In my case, I\nhad to sacrifice only one import from Lagoshny's library:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { PageParam } from "@lagoshny/ngx-hateoas-client";\n'})}),"\n",(0,r.jsx)(n.p,{children:"and go without this type for now."}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Keycloak provider has been added to Angular configuration:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'jsx title="apps/money-tracker-ui/src/main.ts"',children:"//...\nimport {\n    provideKeycloak,\n    createInterceptorCondition,\n    IncludeBearerTokenCondition,\n    INCLUDE_BEARER_TOKEN_INTERCEPTOR_CONFIG,\n    includeBearerTokenInterceptor\n} from \"keycloak-angular\";\n// ...\n\nif (environment.production) {\n   enableProdMode();\n}\n\n// only calls to API require token headers\nconst urlCondition = createInterceptorCondition<IncludeBearerTokenCondition>({\n    urlPattern: /^(.*\\/api\\/.*)?$/i,\n    bearerPrefix: 'Bearer'\n});\n\nbootstrapApplication(AppComponent, {\n   providers: [\n      provideRouter(routes),\n      provideHttpClient(),\n      provideAnimations(),\n      importProvidersFrom(\n          //...\n              SharedComponentsModule,\n              AppComponentsModule \n      ),\n      // keycloak provider \n      provideKeycloak({\n         config: {\n             url: environment.authUrl,\n             realm: 'clematis',\n             clientId: 'clematis-money-tracker-ui',\n         },\n         initOptions: {\n             onLoad: 'check-sso',\n             silentCheckSsoRedirectUri: `${window.location.origin}/assets/silent-check-sso.html`\n         }\n      }),\n      {\n         provide: INCLUDE_BEARER_TOKEN_INTERCEPTOR_CONFIG,\n         useValue: [urlCondition]\n      },\n      provideZoneChangeDetection({ eventCoalescing: true }),\n      provideRouter(routes),\n      {\n         provide: ENVIRONMENT,\n         useValue: environment,\n      },\n      provideHttpClient(withInterceptors([includeBearerTokenInterceptor]))\n   ],\n}).catch((err) => console.error(err));\n\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The URL condition above configures the path to send jwt token along, see ",(0,r.jsx)(n.a,{href:"https://github.com/mauriciovigolo/keycloak-angular#httpclient-interceptors",children:"the manual"}),"."]})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["AuthGuard has been replaced with ",(0,r.jsx)(n.code,{children:"canActivate"})," function:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"jsx",children:"import {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\n\nimport { AuthGuardData, createAuthGuard } from \"keycloak-angular\";\n\nconst isAccessAllowed =  async (\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n    authData: AuthGuardData\n  ): Promise<boolean | UrlTree> => {\n\n    const { authenticated, grantedRoles } = authData;\n\n    // Get the roles required from the route.\n    const requiredRole = route.data['role'];\n\n    // Allow the user to proceed if no roles are required to access the route.\n    if (!requiredRole) {\n      return authenticated;\n    }\n\n    const hasRequiredRole = (role: string): boolean =>\n        Object.values(grantedRoles.resourceRoles).some((roles) => roles.includes(role));\n\n    // Allow the user to proceed if all the required roles are present.\n    return authenticated && hasRequiredRole(requiredRole);\n  }\n\nexport const canActivate = createAuthGuard<CanActivateFn>(isAccessAllowed);\n"})}),"\n",(0,r.jsx)(n.p,{children:"Roles were added as well, since I believe there will be a need for them soon in this and the other applications."}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsxs)(n.li,{children:["Application main component is the only component now that deals with\n",(0,r.jsx)(n.a,{href:"https://github.com/mauriciovigolo/keycloak-angular?tab=readme-ov-file#keycloak-events-signal",children:"Keycloak signals"}),";\nthe similar logic has been removed from the other components:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"jsx",children:"//...\nexport class AppComponent {\n\n    //...\n    isLoggedIn = false;\n    userProfile: KeycloakProfile | undefined = undefined;\n    private readonly keycloakSignal = inject(KEYCLOAK_EVENT_SIGNAL);\n\n    constructor(\n        protected readonly keycloak: Keycloak,\n        private readonly router: Router,\n        private readonly route: ActivatedRoute\n    ) {\n\n        // subscription to updates\n        effect(() => {\n\n                const keycloakEvent: KeycloakEvent = this.keycloakSignal();\n\n                // synchronize the state with Keycloak lifecycle\n                this.isLoggedIn = typeEventArgs<ReadyArgs>(keycloakEvent.args);\n                this.keycloak.loadUserProfile().then((profile) => {\n                    this.userProfile = profile;\n                }).catch((error) => {\n                    this.userProfile = undefined;\n                    this.keycloak.login();\n                });\n\n                if (keycloakEvent.type == KeycloakEventType.AuthSuccess) {\n                    \n                    // redirect to the required route after Keycloak login screen\n                    if (this.route.snapshot.queryParams['redirect']) {\n                        const params: HttpParams = Utils.moveQueryParametersFromRedirectUrl(\n                            this.route.snapshot.queryParams\n                        );\n                        this.router.navigate([params.get('redirect')], {\n                            queryParams: Utils.parseRedirectParameters(params),\n                        });\n                    }\n\n                } else if (\n                    keycloakEvent.type == KeycloakEventType.AuthError\n                    ||\n                    keycloakEvent.type == KeycloakEventType.AuthLogout\n                    ||\n                    keycloakEvent.type == KeycloakEventType.TokenExpired\n                ) {\n\n                    this.userProfile = undefined;\n                    this.keycloak.logout(); // close the application session\n\n                }\n            }\n        )\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(96540);const r={},a=o.createContext(r);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);